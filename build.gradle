apply plugin: 'scala'

task createSchema << {
    println 'create database schema'
}

task loadTestData(dependsOn: createSchema) {
    println 'loadTestData'
}
loadTestData.onlyIf {
    System.properties['load.data'] == 'true'
}
loadTestData.ext.nickName = "old.wang"

task hello(dependsOn: loadTestData) << {
    println "hello, this task's path is ${loadTestData.nickName}"
}

task logLevel << {
    def levels = ['DEBUG',
                  'INFO',
                  'LIFECYCLE',
                  'QUIET',
                  'WARN',
                  'ERROR']
    levels.each { level ->
        logging.level = level
        def logMessage = "SETTING LogLevel=${level}"
        logger.error logMessage
        logger.error '-' * logMessage.size()
        logger.debug 'DEBUG ENABLED'
        logger.info 'INFO ENABLED'
        logger.lifecycle 'LIFECYCLE ENABLED'
        logger.warn 'WARN ENABLED'
        logger.quiet 'QUIET ENABLED'
        logger.error 'ERROR ENABLED'
        println 'THIS IS println OUTPUT'
        logger.error ' '
    }
}